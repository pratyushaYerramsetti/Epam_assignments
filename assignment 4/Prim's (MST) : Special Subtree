import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;
class Node{
    int src;
    int dest;
    int wt;
    Node(int src,int dest,int wt){
        this.src = src;
        this.dest = dest;
        this.wt = wt;
    }
}
public class Solution {

    // Complete the prims function below.
    static int prims(int n, int[][] edges, int start) {
        ArrayList<ArrayList<Node>> arr = new ArrayList<>();
                        int sum = 0;

        for(int i=0;i<=n;i++)
            arr.add(new ArrayList<Node>());
        for(int i=0;i<edges.length;i++){
            int s = edges[i][0];
            int d = edges[i][1];
            int w = edges[i][2];
            arr.get(s).add(new Node(s,d,w));
            arr.get(d).add(new Node(d,s,w));
        }
        int dist[] = new int[n+1];
        for(int i=1;i<=n;i++)
            dist[i] = Integer.MAX_VALUE;
        boolean vis[] = new boolean[n+1];
            dist[start] = 0;
            for(int l=0;l<n;l++){
                int min = Integer.MAX_VALUE;
                int ind = 0;
                for(int i=1;i<=n;i++){
                    if(!vis[i]&&min>dist[i]){
                        min = dist[i];
                        ind = i;
                    }
                }
                vis[ind] = true;
                for(Node temp: arr.get(ind)){
                    if(!vis[temp.dest]&&dist[temp.dest]>temp.wt ){
                        dist[temp.dest] = temp.wt;
                    }
                }
               
            }
             for(int i=1;i<=n;i++){
                
                    sum+=dist[i];
                }
            return sum;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nm = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nm[0]);

        int m = Integer.parseInt(nm[1]);

        int[][] edges = new int[m][3];

        for (int i = 0; i < m; i++) {
            String[] edgesRowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < 3; j++) {
                int edgesItem = Integer.parseInt(edgesRowItems[j]);
                edges[i][j] = edgesItem;
            }
        }

        int start = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int result = prims(n, edges, start);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
